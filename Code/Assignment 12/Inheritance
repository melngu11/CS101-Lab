#################################################
#CS101-Lab
#Word Count Program
#Melisa Nguyen
#mnfh@umsystem.edu
#PROBLEM:
#  Design a program to generate four different shapes by using inheritence of classes and the turtle module
#  These shapes include a box, filled in box, circle, and filled in circle.
#ALGORITHM:
#   1. User will choose which shape to generate from the menu printed by the print_menu() function
#   2. All shapes inherits the (x,y) coordinate and color settup constructor
#   3. All shapes inherit the draw() function from class Point to initalize turtle module to setup the draw space
#   4. For shapes that are only outlined, turtle's forward,turns, and/or radius passed through circle() functions will be used.
#   5. Shapes that require filling will incorpate their fill color passed through fillcolor() and a begin_fill() and end_fill() function at the 
#       beginning and end of the turtle directions, respectively.
#   6. trutle.done() was added to keep turtle draw windows open after completion. 
#   7. Again, the new list will be interated through and a count will keep track of how many words have a value of 1
#   8. By finding the length(amount of elements) of the list we find the amount of unquie words
#ERROR HANDLING:
#   x and y coordinates along with width and height are automactally set by code. User may add lines to require input of desired dimensions 
#   All color input must be valid to avoid error and end of program
################################################
import turtle

class Point(object):
    def __init__(self,x,y,color):
        self.x = x
        self.y = y
        self.color = color
    def draw(self):
        turtle.penup()
        turtle.goto(self.x,self.y)
        turtle.pendown()
        turtle.color(self.color)
        turtle.setheading(0)
        self.draw_action()
    def draw_action(self):
        turtle.dot()
        
class Box(Point):
    def __init__(self,x1,y1,width,height,color):
        super().__init__(x1,y1,color)
        self.width = width
        self.height = height
    def draw_action(self):
        turtle.forward(self.width)
        turtle.right(90)
        turtle.forward(self.height)
        turtle.right(90)
        turtle.forward(self.width)
        turtle.right(90)
        turtle.forward(self.height)
        turtle.done()
class BoxFilled(Box):
    def __init__(self, x1,y1,width,height, color, fillcolor):
        super().__init__(x1,y1,width,height,color)
        self.fillcolor = fillcolor
    def draw_action(self):
        turtle.fillcolor(self.fillcolor)
        turtle.begin_fill()
        turtle.forward(self.width)
        turtle.right(90)
        turtle.forward(self.height)
        turtle.right(90)
        turtle.forward(self.width)
        turtle.right(90)
        turtle.forward(self.height)
        turtle.end_fill()
        turtle.done()
class Circle(Point):
    def __init__(self, x1,y1,radius,color):
        super().__init__(x1,y1,color)
        self.radius = radius
    def draw_action(self):
        turtle.circle(self.radius)
        turtle.done()
class CircleFilled(Circle):
    def __init__(self,x1,y1,radius,color,fillcolor):
        super().__init__(x1,y1,radius,color)
        self.fillcolor = fillcolor
    def draw_action(self):
        turtle.fillcolor(self.fillcolor)
        turtle.begin_fill()
        turtle.circle(self.radius)
        turtle.end_fill()
        turtle.done()
#Added inital menu prompt for user to select object to draw
def print_menu():
    a = '1) Box'
    b = '2) Filled in box'
    c = '3) Circle'
    d = '4) Filled in Circle'
    print('{}\n{}\n{}\n{}'.format(a,b,c,d))
    choice = int(input('Please choose shape to draw: '))
    return choice
#Test Code:
choice = print_menu()
while choice not in range(1,5):
    choice = input('Please enter valid choice')
#To draw outline of a box:
if choice == 1:
    color = input('Choose a color: ')
    b= Box(100,110,70,50,color)
    b.draw()
elif choice == 2:
    color1 = input('What color to outline with? ')
    color2 = input('What color to fill with? ')
    b = BoxFilled(100,110,60,80,color1,color2)
    b.draw()
elif choice == 3:
    color1 = input('What color to outline with? ')
    c= Circle(1,1,125,color1)
    c.draw()   
elif choice == 4:
    color1 = input('What color to outline with? ')
    color2 = input('What color to fill with? ')
    c = CircleFilled(1,1,125,color1,color2)
    c.draw() 

