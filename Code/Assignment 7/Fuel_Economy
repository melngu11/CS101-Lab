################################################
#CS101-Lab
#Fuel Economy Program
#Melisa Nguyen
#mnfh@umsystem.edu
#PROBLEM:
#Design a program to create a new output file that consist of vehicles and their details that are equal
# or better to fuel economy. This means the combined miles per gallon should be larger or equal to 
# the user's input. Bad input will throw error messagesa and not be included in the output file.
#ALGORITHM:
#   1. Obtain miles per gallon(mpg) from the user
#   2. User's mpg will be checked in a function called 'check_mpg'
#   3. The check consist of validating that the user's input mpg is within 0-100mpg and a number
#   4. Once valid input is recieved and checked, the function will return the value to continue the program
#   5. User will be asked which file will be opened
#   6. The file to be opened will be checked in 'open_file' function.
#   7. If the file is not found an error will be thrown and the user will be prompt to 
#       enter a file until a valid file is entered.
#   8. User then be prompt to enter an output file to write to.
#   9. If the file does not exist, IOERROR will be thrown and the user will be prompt to enter
#       a valid output file.
#   10. Vehicle's combined mpg greater or equal to the user's mpg will be written to the output file.
#   11. Any invalid mpg values will throw an error letting the user know the vehicle details and that
#       the mpg was converted
#ERROR HANDLING:
#   Any mpg input not within 0-100 inclusive will prompt the user to enter a value until a valid value is
#   entered. 
#   Files not found will prompt user to entered file name until a valid file is entered.
#   Bad input from reading files will not be considered and written to the output file. The user will
#   be notified of which vechile triggered an error.
################################################
def check_mpg():
  mpg = -1
  while mpg not in range(0,101):
    try:
      mpg=int(input('Enter the minimum mpg ==> '))
      if mpg < 0:
        print('Fuel economy given must be greater than 0')
      elif mpg > 100:
        print('Fuel economy given must be less than 100')
      else:
        return mpg
    except:
      print('You must enter a number for fuel economy')
def open_file():
  file = True
  while file:
    try:
      input_file = input('Enter the name of the input vehicle file ==> ')
      read_file = open(input_file,'r')
      return read_file
    except:
          print('Could not open file {}'.format(input_file))
def write_file():
  write = True
  while write:
    try:
      outfile = input('Enter the name of the file to output to ==> ')
      output_file = open(outfile,'r+')
      return output_file
    except IOError:
      print('There is an IO Error opening {}'.format(outfile))
    except:
      print('There is an error occured opening {}'.format(outfile))     
user_mpg = check_mpg()
print()
read_file= open_file()
print()
output_file = write_file()
print()
vehicle = read_file.readlines()
for car in vehicle[1:]:
  try: 
    car_details = car.split('\t')
    car_file_mpg = car_details[7]
    car_file_mpg = int(car_file_mpg)
    if car_file_mpg>=user_mpg:
      output_file.write('{:<40}{:<40}{:<40}{:>10.3f}\n'.format(car_details[0],car_details[1],car_details[2],car_file_mpg))
  except:
    print('Could not convert value {} for vehicle {} {} {}'.format(car_details[7],car_details[0],car_details[1],car_details[2]))
output_file.close()
read_file.close()